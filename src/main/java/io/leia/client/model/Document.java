/*
 * LEIA RESTful API for AI
 * Leia API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@leia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.leia.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Document
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-11T17:16:03.438356+02:00[Europe/Paris]")
public class Document {
  public static final String SERIALIZED_NAME_APPLICATION_ID = "application_id";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creation_time";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_EXPIRATION_TIME = "expiration_time";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_TIME)
  private OffsetDateTime expirationTime;

  public static final String SERIALIZED_NAME_EXTENSION = "extension";
  @SerializedName(SERIALIZED_NAME_EXTENSION)
  private String extension;

  public static final String SERIALIZED_NAME_FILENAME = "filename";
  @SerializedName(SERIALIZED_NAME_FILENAME)
  private String filename;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MD5SUM = "md5sum";
  @SerializedName(SERIALIZED_NAME_MD5SUM)
  private String md5sum;

  public static final String SERIALIZED_NAME_MIME_TYPE = "mime_type";
  @SerializedName(SERIALIZED_NAME_MIME_TYPE)
  private String mimeType;

  public static final String SERIALIZED_NAME_ORIGINAL_ID = "original_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ID)
  private String originalId;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Integer page;

  public static final String SERIALIZED_NAME_ROTATION_ANGLE = "rotation_angle";
  @SerializedName(SERIALIZED_NAME_ROTATION_ANGLE)
  private Integer rotationAngle;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Integer size;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;


  public Document applicationId(String applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * Get applicationId
   * @return applicationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "example_id", required = true, value = "")

  public String getApplicationId() {
    return applicationId;
  }


  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public Document creationTime(OffsetDateTime creationTime) {
    
    this.creationTime = creationTime;
    return this;
  }

   /**
   * Get creationTime
   * @return creationTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2018-11-07T16:02:29.761Z", required = true, value = "")

  public OffsetDateTime getCreationTime() {
    return creationTime;
  }


  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public Document expirationTime(OffsetDateTime expirationTime) {
    
    this.expirationTime = expirationTime;
    return this;
  }

   /**
   * Get expirationTime
   * @return expirationTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-11-08T16:02:29.761Z", value = "")

  public OffsetDateTime getExpirationTime() {
    return expirationTime;
  }


  public void setExpirationTime(OffsetDateTime expirationTime) {
    this.expirationTime = expirationTime;
  }


  public Document extension(String extension) {
    
    this.extension = extension;
    return this;
  }

   /**
   * Get extension
   * @return extension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jpg", value = "")

  public String getExtension() {
    return extension;
  }


  public void setExtension(String extension) {
    this.extension = extension;
  }


  public Document filename(String filename) {
    
    this.filename = filename;
    return this;
  }

   /**
   * Get filename
   * @return filename
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "mydoc", required = true, value = "")

  public String getFilename() {
    return filename;
  }


  public void setFilename(String filename) {
    this.filename = filename;
  }


  public Document id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "example_id", required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Document md5sum(String md5sum) {
    
    this.md5sum = md5sum;
    return this;
  }

   /**
   * The MD5 sum of the document
   * @return md5sum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The MD5 sum of the document")

  public String getMd5sum() {
    return md5sum;
  }


  public void setMd5sum(String md5sum) {
    this.md5sum = md5sum;
  }


  public Document mimeType(String mimeType) {
    
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "image/jpeg", value = "")

  public String getMimeType() {
    return mimeType;
  }


  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  public Document originalId(String originalId) {
    
    this.originalId = originalId;
    return this;
  }

   /**
   * If this document is the result of a conversion, will contain the id of the original document
   * @return originalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this document is the result of a conversion, will contain the id of the original document")

  public String getOriginalId() {
    return originalId;
  }


  public void setOriginalId(String originalId) {
    this.originalId = originalId;
  }


  public Document page(Integer page) {
    
    this.page = page;
    return this;
  }

   /**
   * The page represented by this document (only if it is a sub document of a multi page document such as a PDF)
   * @return page
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "The page represented by this document (only if it is a sub document of a multi page document such as a PDF)")

  public Integer getPage() {
    return page;
  }


  public void setPage(Integer page) {
    this.page = page;
  }


  public Document rotationAngle(Integer rotationAngle) {
    
    this.rotationAngle = rotationAngle;
    return this;
  }

   /**
   * The rotation angle in degrees to apply to the document to present it in a human readable orientation
   * minimum: 0
   * maximum: 359
   * @return rotationAngle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "The rotation angle in degrees to apply to the document to present it in a human readable orientation")

  public Integer getRotationAngle() {
    return rotationAngle;
  }


  public void setRotationAngle(Integer rotationAngle) {
    this.rotationAngle = rotationAngle;
  }


  public Document size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * The size of the document in bytes
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000000", value = "The size of the document in bytes")

  public Integer getSize() {
    return size;
  }


  public void setSize(Integer size) {
    this.size = size;
  }


  public Document tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Document addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.applicationId, document.applicationId) &&
        Objects.equals(this.creationTime, document.creationTime) &&
        Objects.equals(this.expirationTime, document.expirationTime) &&
        Objects.equals(this.extension, document.extension) &&
        Objects.equals(this.filename, document.filename) &&
        Objects.equals(this.id, document.id) &&
        Objects.equals(this.md5sum, document.md5sum) &&
        Objects.equals(this.mimeType, document.mimeType) &&
        Objects.equals(this.originalId, document.originalId) &&
        Objects.equals(this.page, document.page) &&
        Objects.equals(this.rotationAngle, document.rotationAngle) &&
        Objects.equals(this.size, document.size) &&
        Objects.equals(this.tags, document.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, creationTime, expirationTime, extension, filename, id, md5sum, mimeType, originalId, page, rotationAngle, size, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    expirationTime: ").append(toIndentedString(expirationTime)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    md5sum: ").append(toIndentedString(md5sum)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    originalId: ").append(toIndentedString(originalId)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    rotationAngle: ").append(toIndentedString(rotationAngle)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

